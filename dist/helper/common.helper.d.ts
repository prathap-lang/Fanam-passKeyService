import { Prisma } from '@prisma/client';
import { PrismaService } from 'prisma/prisma.service';
export declare function addRefreshToken(prisma: PrismaService, user_id: string, accessToken: string, refreshToken: string): Promise<{
    user_id: string;
    customer_hash: string;
    first_name: string;
    last_name: string;
    date_of_birth: Date;
    business_name: string;
    email: string;
    country_code: string;
    phone_no: string;
    pin: string;
    account_type: import("@prisma/client").$Enums.EnumAccount;
    account_no: string;
    address_line_1: string;
    address_line_2: string;
    token: Prisma.JsonValue;
    invalidToken: Prisma.JsonValue;
    access_token: Prisma.JsonValue;
    country_id: number;
    state_id: number;
    city_id: number;
    zip_code: string;
    role_id: string;
    noOfWrongPinAttempts: number;
    status: import("@prisma/client").$Enums.EnumUserStatus;
    created_at: Date;
    updated_at: Date;
}>;
export declare function removeRefreshToken(prisma: PrismaService, user_id: string, refreshToken: string): Promise<{
    user_id: string;
    customer_hash: string;
    first_name: string;
    last_name: string;
    date_of_birth: Date;
    business_name: string;
    email: string;
    country_code: string;
    phone_no: string;
    pin: string;
    account_type: import("@prisma/client").$Enums.EnumAccount;
    account_no: string;
    address_line_1: string;
    address_line_2: string;
    token: Prisma.JsonValue;
    invalidToken: Prisma.JsonValue;
    access_token: Prisma.JsonValue;
    country_id: number;
    state_id: number;
    city_id: number;
    zip_code: string;
    role_id: string;
    noOfWrongPinAttempts: number;
    status: import("@prisma/client").$Enums.EnumUserStatus;
    created_at: Date;
    updated_at: Date;
}>;
export declare function isBlackListed(prisma: PrismaService, req: any): Promise<boolean>;
export declare function logout(prisma: PrismaService, req: any, input: any): Promise<{
    user_id: string;
    customer_hash: string;
    first_name: string;
    last_name: string;
    date_of_birth: Date;
    business_name: string;
    email: string;
    country_code: string;
    phone_no: string;
    pin: string;
    account_type: import("@prisma/client").$Enums.EnumAccount;
    account_no: string;
    address_line_1: string;
    address_line_2: string;
    token: Prisma.JsonValue;
    invalidToken: Prisma.JsonValue;
    access_token: Prisma.JsonValue;
    country_id: number;
    state_id: number;
    city_id: number;
    zip_code: string;
    role_id: string;
    noOfWrongPinAttempts: number;
    status: import("@prisma/client").$Enums.EnumUserStatus;
    created_at: Date;
    updated_at: Date;
}>;
export declare function logoutAll(prisma: PrismaService, req: any): Promise<{
    user_id: string;
    customer_hash: string;
    first_name: string;
    last_name: string;
    date_of_birth: Date;
    business_name: string;
    email: string;
    country_code: string;
    phone_no: string;
    pin: string;
    account_type: import("@prisma/client").$Enums.EnumAccount;
    account_no: string;
    address_line_1: string;
    address_line_2: string;
    token: Prisma.JsonValue;
    invalidToken: Prisma.JsonValue;
    access_token: Prisma.JsonValue;
    country_id: number;
    state_id: number;
    city_id: number;
    zip_code: string;
    role_id: string;
    noOfWrongPinAttempts: number;
    status: import("@prisma/client").$Enums.EnumUserStatus;
    created_at: Date;
    updated_at: Date;
}>;
