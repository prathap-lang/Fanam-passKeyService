import { LoggerService } from 'logger.service';
import { PdfService } from 'pdf/pdf.service';
import { PrismaService } from 'prisma/prisma.service';
import { RazorpayService } from 'razorpay/razorpay.service';
import { AppResponse } from 'utils';
import { CancelPayment } from './dto/cancel-payment.dto';
import { VisaFxDto } from './dto/visa-fx-rate.dto';
import { PaymentService } from './payment.service';
export declare class PaymentController {
    private readonly paymentService;
    private readonly prisma;
    private readonly razorpayService;
    private readonly log;
    private readonly pdf;
    constructor(paymentService: PaymentService, prisma: PrismaService, razorpayService: RazorpayService, log: LoggerService, pdf: PdfService);
    fxRateConversion(body: VisaFxDto): Promise<AppResponse<{
        sourceCountry: {
            country_id: number;
            country_name: string;
            iso3: string;
            iso2: string;
            emoji: string;
            emojiU: string;
            numeric_code: string;
            phone_code: string;
            capital: string;
            currency: string;
            currency_name: string;
            currency_symbol: string;
            tld: string;
            native: string;
            nationality: string;
            latitude: string;
            longitude: string;
            bankInputs: import("@prisma/client/runtime/library").JsonValue[];
            subregion_id: number;
            is_active: boolean;
            created_at: Date;
            updated_at: Date;
        };
        destinationCountry: {
            country_id: number;
            country_name: string;
            iso3: string;
            iso2: string;
            emoji: string;
            emojiU: string;
            numeric_code: string;
            phone_code: string;
            capital: string;
            currency: string;
            currency_name: string;
            currency_symbol: string;
            tld: string;
            native: string;
            nationality: string;
            latitude: string;
            longitude: string;
            bankInputs: import("@prisma/client/runtime/library").JsonValue[];
            subregion_id: number;
            is_active: boolean;
            created_at: Date;
            updated_at: Date;
        };
        transfer_times: any[];
    }>>;
    visaFxRatePopularCorridors(): Promise<AppResponse<any[]>>;
    sendPayout(transaction_id: string): Promise<AppResponse<any>>;
    cancelPayout(body: CancelPayment): Promise<AppResponse<any>>;
}
